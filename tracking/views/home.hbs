<!DOCTYPE html>
<html lang="en">


{{>head}}

<body style="background-image: url('img/bg2.jpg');">

    <!-- -----------------------------------------Menu-------------------------------------------- -->
    
        {{>menu}}
    <!--------------------------------------------------------------------------------------------->

    <!-------------------------------------------En tête---------------------------------------------->
    <div class="row"  style="background-color: rgba(20,20,20,0.3)">
        <div class="col s12 white-text">
            <h5>Tracking des équipements</h5>
            <p>
                Réalisé par <a href="#">JOHANESA Asandratry Ny Avo</a> 
            </p>
        </div>
    </div>
    <!--------------------------------------------------------------------------------------------->
    <div class="row">
    <div class="col l3 card-panel hide-on-med-and-down" style="background-color: rgba(204, 169, 169, 0.062)"> <!-- Note that "m4 l3" was added -->

        <div class="row">
            <div class="col s12">
                <div class="container" style="margin-top: 4vh; margin-bottom: 4vh">
                    <div class="row">
                        <h5 class="white-text">Equipements detectés</h5>
                    <div class="col s12">
                        <form>
                            <div class="input-field">
                                <input id="search" type="search" required>
                                <label class="label-icon" for="search"><i class="material-icons">search</i></label>
                                <i class="material-icons">close</i>
                            </div>
                        </form>
                    </div>
                    <div class="col s12">
                        <select>
                            <option value="">ID</option>
                            <option value="">Libellé</option>
                            <option value="">Catégorie</option>
                            <option value="">Salle</option>
                            </select>
                    </div>
                    
                    
                </div>
                
                </div>
                <div class="col s12 card-panel" style="height: 250px; overflow-y:scroll; background-color:inherit">
                       <table id="liste_detecte">
                           
                       </table>
                    </div>
                
                
                
            </div>
            <footer class="page-footer" style="background-color: inherit;">
                <div class="container" style="margin-top: 1vh;">
                    <div class="col l12">
                      
                            <center><button class="blue waves-effect waves-light btn" style="margin: 5px;">Modifier icon</button></center> 
                       
                        
                    </div>
                    
                    <div class="col l12">
                    
                            <center><button class="red waves-effect waves-light btn" style="margin: 5px;">Supprimer</button></center> 
                       
                        
                    </div>
                </div>
            </footer>

        </div>
          

      </div>
        <div class="col m12 l6">
            <div id="menu">
                
                <label for="streets-v11"> <input class="with-gap" id="streets-v11" type="radio" name="rtoggle" value="streets" onclick="switchLayer(this);" checked="checked"/> <span>streets</span></label>
                
                <label for="light-v10"><input  id="light-v10" type="radio" name="rtoggle" value="light" onclick="switchLayer(this);" /><span>light</span></label>
                
                <label for="dark-v10"><input  id="dark-v10" type="radio" name="rtoggle" value="dark" onclick="switchLayer(this);" /><span>dark</span></label>
                
                <label for="outdoors-v11"><input  id="outdoors-v11" type="radio" name="rtoggle" value="outdoors" onclick="switchLayer(this);" /><span>outdoors</span></label>

                <label for="satellite-v9"><input  id="satellite-v9" type="radio" name="rtoggle" value="satellite" onclick="switchLayer(this);" /><span>satellite</span></label>
            </div>


            <!-- Map -->

             <div class="col s12" id='map' style='border: 1px solid black; height: 400px;'> <!-- Note that "m8 l9" was added -->
                
          
                <script>

                    mapboxgl.accessToken = 'pk.eyJ1Ijoiam55YXZvIiwiYSI6ImNrazlxeDFrbTBnMXkydW51enp6b2I4ZTQifQ.-S7B4qwXN1dbdguZ7Jrp8g';
                    var map = new mapboxgl.Map({
                    container: 'map',
                    style: 'mapbox://styles/mapbox/streets-v11',
                    center: [57.45367983856331,-20.244244734600016],
                    zoom : 18
                    });

                    var size = 100;
 
                    // implementation of CustomLayerInterface to draw a pulsing dot icon on the map
                    // see https://docs.mapbox.com/mapbox-gl-js/api/#customlayerinterface for more info
                    var pulsingDot = {
                        width: size,
                        height: size,
                        data: new Uint8Array(size * size * 4),
                        
                        // get rendering context for the map canvas when layer is added to the map
                        onAdd: function () {
                            var canvas = document.createElement('canvas');
                            canvas.width = this.width;
                            canvas.height = this.height;
                            this.context = canvas.getContext('2d');
                        },
                        
                        // called once before every frame where the icon will be used
                        render: function () {
                            var duration = 1000;
                            var t = (performance.now() % duration) / duration;
                            
                            var radius = (size / 2) * 0.3;
                            var outerRadius = (size / 2) * 0.7 * t + radius;
                            var context = this.context;
                            
                            // draw outer circle
                            context.clearRect(0, 0, this.width, this.height);
                            context.beginPath();
                            context.arc(
                                this.width / 2,
                                this.height / 2,
                                outerRadius,
                                0,
                                Math.PI * 2
                            );
                            context.fillStyle = 'rgba(255, 200, 200,' + (1 - t) + ')';
                            context.fill();
                            
                            // draw inner circle
                            context.beginPath();

                            context.arc(
                                this.width / 2,
                                this.height / 2,
                                radius,
                                0,
                                Math.PI * 2
                            );
                            context.fillStyle = 'rgba(255, 100, 100, 1)';
                            context.strokeStyle = 'white';
                            context.lineWidth = 2 + 4 * (1 - t);
                            context.fill();
                            context.stroke();
                            
                            // update this image's data with data from the canvas
                            this.data = context.getImageData(
                                0,
                                0,
                                this.width,
                                this.height
                            ).data;
                            
                            // continuously repaint the map, resulting in the smooth animation of the dot
                            map.triggerRepaint();
                            
                            // return `true` to let the map know that the image was updated
                            return true;
                        }
                    };
                    
                  
                    
                    function switchLayer(layer) {
                        var layerId = layer.id;
                        map.setStyle('mapbox://styles/mapbox/' + layerId);
                    }
                    

                    window.setInterval(()=>{
                        var coord = map.getCenter();
                        document.getElementById('longitude').value = coord.lng;
                        document.getElementById('latitude').value = coord.lat;
                    }, 100);

                    /*
                    window.setInterval(()=>{
                        var coord = map.getCenter();
                        var marker = new mapboxgl.Marker()
                            .setLngLat([coord.lng, coord.lat])
                            .addTo(map);
                    },100);
                    */
                    var info_equipements = {};
                    var url = '/crate/equipement';
                    var tracking = window.setInterval(()=>{
                        var request = new XMLHttpRequest();
                        request.open('GET', url, true);
                        request.onload = function () {
                            if (this.status >= 200 && this.status < 400) {
                               
                                info_equipements = JSON.parse(this.response);
                                
                            }
                        };
                        request.send();

                    },1000);

                    //liste des ID
                    var liste = [];
                    
                    var last_length = liste.length;

                    var maj_liste = window.setInterval(()=>{
                        if(!jQuery.isEmptyObject(info_equipements))
                        {
                            var temp = [...info_equipements.rows];
                            for(i=0;i<liste.rowCount;i++)
                            {
                                delete temp[i].position;
                                delete temp[i].salle;
                            }
                            liste = [...temp];

                          
                           }
                    },2000);


                    var maj_affichage = window.setInterval(()=>{
                        //Mise à jour affichage 
                        if(liste.length != last_length)
                        {
                            var table = document.getElementById('liste_detecte');
                            table.innerHTML='';
                            for(i=0;i<info_equipements.rowCount;i++)
                            {
                                //Une ligne sur le tableau
                                
                                var equip = document.createElement('tr');
                                
                               
                                equip.innerHTML = `
                                <tr>
                                    <td>
                                        <div class="row">
                                            <div class="col l12">ID: ${liste[i].id} </div>
                                            <div class="col l12">Libellé: indefini</div>
                                            <div class="col l12">Catégorie: indefini</div>
                                        </div>
                                    </td>
                                    <td>
                                        <div class="row">
                                            <div class="col l12">Salle</div>
                                            <div class="col l12" id="salle_${liste[i].id}"> ${info_equipements.rows[i].salle}</div>
                                        </div>
                                    </td>
                                    <td>
                                        <div class="row">
                                                <div class="col l12">
                                                    <button class="transparent waves-effect waves-light" style="font-size:10px"><i class="fa fa-edit"></i></button>
                                                </div>
                                                <div class="col l12">
                                                    <button class="transparent waves-effect waves-light" style="font-size:10px "><i class="fa fa-trash"></i></button>
                                                </div>
                                        </div>
                                    </td>
                                </tr>
                                `;
                                table.appendChild(equip);

                                           

                            }
                            last_length = liste.length;
                            /*
                            <tr>
                                <td>
                                   <div class="row">
                                       <div class="col l12">ID: </div>
                                       <div class="col l12">Libellé: </div>
                                       <div class="col l12">Catégorie: </div>
                                   </div>
                                </td>
                                <td>
                                    <div class="row">
                                       <div class="col l12">Salle</div>
                                    
                                   </div>
                                </td>
                           </tr>
                           */

                            
                        }
                        else 
                        {
                             for(i=0;i<info_equipements.rowCount;i++)
                            {
                                var id_salle = document.getElementById(`salle_${info_equipements.rows[i].id}`)
                                id_salle.innerText = info_equipements.rows[i].salle;
                            }
                        }
                    },2000);


                    
                    //simulateur de deplacement
                    function simulation(){

                        
                        var url = '/crate/equipement';

                        map.addSource('drone', { type: 'geojson', data: 'https://wanderdrone.appspot.com/' });
                        map.addImage('pulsing-dot', pulsingDot, { pixelRatio: 2 });
                        map.addLayer({
                            'id': 'drone',
                            'type': 'symbol',
                            'source': 'drone',
                            'layout': {
                                'icon-image': 'pulsing-dot'
                                }
                            });
                        
                        
                        var request = new XMLHttpRequest();

                        window.setInterval(function () {
                            // make a GET request to parse the GeoJSON at the url
                            request.open('GET', url, true);
                           
                        

                            request.onload = function () {
                                if (this.status >= 200 && this.status < 400) {
                                    // retrieve the JSON from the response
                                    var res = JSON.parse(this.response);
                                    var point = [res.rows[0].position.x,res.rows[0].position.y];
                                    console.log(point);
                                  
                                    // update the drone symbol's location on the map
                                    map.getSource('drone').setData({
                                        "geometry": 
                                            {
                                            "type": "Point", 
                                             "coordinates": point}, 
                                             "type": "Feature", 
                                             "properties": {}
                                             });
                                    
                                    /*
                                    // fly the map to the drone's current location
                                    map.flyTo({
                                        center: point,
                                        speed: 0.5
                                    }
                                   
                                    )
                                     */
                                }
                            };
                           request.send();
                        }, 1000);
                        
                       
                        
                    }
                
                </script>
            </div>
            <!-- -->
            <div class="col s12">
                
                    <div class="row">
                        <div class="col s6">
                            <label for="latitude">Latitude</label>
                            <input id="latitude" name="latidude">
                        </div>
                        <div class="col s6">
                            <label for="longitude">Longitude</label>
                            <input id="longitude" name="longitude">
                        </div>
                            

                        
                    </div>
                
            </div>
        </div>
       
        <div class="col l3 card-panel hide-on-med-and-down" style="background-color: rgba(204, 169, 169, 0.062);"> 
            <div class="row">
                <form action="#" class="col 9" style="margin-left: 2vw;">
                    <div class="col s12">
                        <h5 class="white-text">Nouvel equipement / <br> Modification</h5>
                    </div>
                    <div class="input-field col s10">
                        <input type="text">
                    </div>
                    <div class="input-field col s10">
                        <input type="text">
                    </div>
                    <div class="input-field col s10">
                        <input type="text">
                    </div>
                    <div class="col s10">
                        <center><input type="button" class="btn wave-light" value="Ajouter"></center>
                    </div>
                </form>
                
            </div>
        </div>

      </div>
    </div>
    

    <!--
        <script>
        var mapboxgl = require('mapbox-gl/dist/mapbox-gl.js');
 
        mapboxgl.accessToken = 'pk.eyJ1Ijoiam55YXZvIiwiYSI6ImNrazlxeDFrbTBnMXkydW51enp6b2I4ZTQifQ.-S7B4qwXN1dbdguZ7Jrp8g';
        var map = new mapboxgl.Map({
        container: 'map',
        style: 'mapbox://styles/mapbox/streets-v11'
        });
        
        </script>
    -->


    <!-- <script defer
        src="https://maps.googleapis.com/maps/api/js?key=AIzaSyDo3XrJvyTByzpv4eb9JnMYZ7uL9oHt6rs&callback=initMap">
    </script>
    -->


    <!-------------------------------------------Bouton et Modal---------------------------------------------->
   
    <a id="new-module" href="#module-form" class="modal-trigger hide-on-large-only btn-floating btn-large waves-effect waves-light blue-grey">
        <i class="material-icons">add</i>
    </a>


    <div id="module-form" class="modal">
        <div class="modal-content">
        <h4>Nouvel equipement</h4>
        <div class="divider"></div>
        <br>
        <form id="insertion_module" name="insertModule" action="modules/insertModule.php" onsubmit="return test_module();" method="post" enctype="multipart/form-data" accept-charset="utf-8">

        <script>

              function test_module() {
                if (document.getElementById('nom_equipement').value.replace(' ','') == ''){
                    document.getElementById('nom_equipement').className = "validate invalid";
                  return false;
                }
                return true;
              }
             
        </script>


            <div class="row">
                <div class="input-field col s12">
                    <input id="nom_equipement" name="nom_equipement" type="text" require class="validate" >
                    <label id="lab_mod" class="active" for="nom_equipement">Nom de l'équipement</label>
                </div>
            </div>
            <div class="row">
                <button name="submit" type="submit" class="btn waves-effect waves-light grey-blue" >
                    Confirmer
                    
                </button>
                
                <button type="reset" onclick="toggle()" class="btn waves-effect waves-light red lighten-2">Annuler</button>
               
                
            </div>
        </form>
        
    </div>
    <!-------------------------------------------------------------------------------------------------------->


    {{>scripts}}
</body>
</html>